[ [ ( KeywordTok , "import" )
  , ( ImportTok , " java.util.Arrays;" )
  ]
, []
, [ ( KeywordTok , "public" )
  , ( NormalTok , " " )
  , ( KeywordTok , "class" )
  , ( NormalTok , " ABC{" )
  ]
, [ ( NormalTok , "        " )
  , ( KeywordTok , "private" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "static" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "void" )
  , ( NormalTok , " " )
  , ( FunctionTok , "swap" )
  , ( NormalTok , "(" )
  , ( DataTypeTok , "int" )
  , ( NormalTok , " i, " )
  , ( DataTypeTok , "int" )
  , ( NormalTok , " j, " )
  , ( BuiltInTok , "Object" )
  , ( KeywordTok , "... " )
  , ( NormalTok , "arr){" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "Object" )
  , ( NormalTok , " tmp = arr[i];" )
  ]
, [ ( NormalTok , "                arr[i] = arr[j];" ) ]
, [ ( NormalTok , "                arr[j] = tmp;" ) ]
, [ ( NormalTok , "        }" ) ]
, [ ( NormalTok , "        " ) ]
, [ ( NormalTok , "        " )
  , ( KeywordTok , "public" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "static" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "boolean" )
  , ( NormalTok , " " )
  , ( FunctionTok , "canMakeWord" )
  , ( NormalTok , "(" )
  , ( BuiltInTok , "String" )
  , ( NormalTok , " word, " )
  , ( BuiltInTok , "String" )
  , ( KeywordTok , "... " )
  , ( NormalTok , "blocks) {" )
  ]
, [ ( NormalTok , "            " )
  , ( KeywordTok , "if" )
  , ( NormalTok , "(word." )
  , ( FunctionTok , "length" )
  , ( NormalTok , "() == " )
  , ( DecValTok , "0" )
  , ( NormalTok , ")" )
  ]
, [ ( NormalTok , "                " )
  , ( KeywordTok , "return" )
  , ( NormalTok , " " )
  , ( KeywordTok , "true" )
  , ( NormalTok , ";" )
  ]
, [ ( NormalTok , "         " ) ]
, [ ( NormalTok , "            " )
  , ( DataTypeTok , "char" )
  , ( NormalTok , " c = " )
  , ( BuiltInTok , "Character" )
  , ( NormalTok , "." )
  , ( FunctionTok , "toUpperCase" )
  , ( NormalTok , "(word." )
  , ( FunctionTok , "charAt" )
  , ( NormalTok , "(" )
  , ( DecValTok , "0" )
  , ( NormalTok , "));" )
  ]
, [ ( NormalTok , "            " )
  , ( KeywordTok , "for" )
  , ( NormalTok , "(" )
  , ( DataTypeTok , "int" )
  , ( NormalTok , " i = " )
  , ( DecValTok , "0" )
  , ( NormalTok , "; i < blocks." )
  , ( FunctionTok , "length" )
  , ( NormalTok , "; i++) {" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "String" )
  , ( NormalTok , " b = blocks[i];" )
  ]
, [ ( NormalTok , "                " )
  , ( KeywordTok , "if" )
  , ( NormalTok , "(" )
  , ( BuiltInTok , "Character" )
  , ( NormalTok , "." )
  , ( FunctionTok , "toUpperCase" )
  , ( NormalTok , "(b." )
  , ( FunctionTok , "charAt" )
  , ( NormalTok , "(" )
  , ( DecValTok , "0" )
  , ( NormalTok , ")) != c && " )
  , ( BuiltInTok , "Character" )
  , ( NormalTok , "." )
  , ( FunctionTok , "toUpperCase" )
  , ( NormalTok , "(b." )
  , ( FunctionTok , "charAt" )
  , ( NormalTok , "(" )
  , ( DecValTok , "1" )
  , ( NormalTok , ")) != c)" )
  ]
, [ ( NormalTok , "                    " )
  , ( KeywordTok , "continue" )
  , ( NormalTok , ";" )
  ]
, [ ( NormalTok , "                " )
  , ( FunctionTok , "swap" )
  , ( NormalTok , "(" )
  , ( DecValTok , "0" )
  , ( NormalTok , ", i, blocks);" )
  ]
, [ ( NormalTok , "                " )
  , ( KeywordTok , "if" )
  , ( NormalTok , "(" )
  , ( FunctionTok , "canMakeWord" )
  , ( NormalTok , "(word." )
  , ( FunctionTok , "substring" )
  , ( NormalTok , "(" )
  , ( DecValTok , "1" )
  , ( NormalTok , "), " )
  , ( BuiltInTok , "Arrays" )
  , ( NormalTok , "." )
  , ( FunctionTok , "copyOfRange" )
  , ( NormalTok , "(blocks, " )
  , ( DecValTok , "1" )
  , ( NormalTok , ", blocks." )
  , ( FunctionTok , "length" )
  , ( NormalTok , ")))" )
  ]
, [ ( NormalTok , "                    " )
  , ( KeywordTok , "return" )
  , ( NormalTok , " " )
  , ( KeywordTok , "true" )
  , ( NormalTok , ";" )
  ]
, [ ( NormalTok , "                " )
  , ( FunctionTok , "swap" )
  , ( NormalTok , "(" )
  , ( DecValTok , "0" )
  , ( NormalTok , ", i, blocks);" )
  ]
, [ ( NormalTok , "            }" ) ]
, [ ( NormalTok , "         " ) ]
, [ ( NormalTok , "            " )
  , ( KeywordTok , "return" )
  , ( NormalTok , " " )
  , ( KeywordTok , "false" )
  , ( NormalTok , ";" )
  ]
, [ ( NormalTok , "        }" ) ]
, [ ( NormalTok , "        " ) ]
, [ ( NormalTok , "        " )
  , ( KeywordTok , "public" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "static" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "void" )
  , ( NormalTok , " " )
  , ( FunctionTok , "main" )
  , ( NormalTok , "(" )
  , ( BuiltInTok , "String" )
  , ( NormalTok , "[] args){" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "String" )
  , ( NormalTok , "[] blocks = {" )
  , ( StringTok , "\"BO\"" )
  , ( NormalTok , ", " )
  , ( StringTok , "\"XK\"" )
  , ( NormalTok , ", " )
  , ( StringTok , "\"DQ\"" )
  , ( NormalTok , ", " )
  , ( StringTok , "\"CP\"" )
  , ( NormalTok , ", " )
  , ( StringTok , "\"NA\"" )
  , ( NormalTok , ", " )
  ]
, [ ( NormalTok , "                                " )
  , ( StringTok , "\"GT\"" )
  , ( NormalTok , ", " )
  , ( StringTok , "\"RE\"" )
  , ( NormalTok , ", " )
  , ( StringTok , "\"TG\"" )
  , ( NormalTok , ", " )
  , ( StringTok , "\"QD\"" )
  , ( NormalTok , ", " )
  , ( StringTok , "\"FS\"" )
  , ( NormalTok , ", " )
  ]
, [ ( NormalTok , "                                " )
  , ( StringTok , "\"JW\"" )
  , ( NormalTok , ", " )
  , ( StringTok , "\"HU\"" )
  , ( NormalTok , ", " )
  , ( StringTok , "\"VI\"" )
  , ( NormalTok , ", " )
  , ( StringTok , "\"AN\"" )
  , ( NormalTok , ", " )
  , ( StringTok , "\"OB\"" )
  , ( NormalTok , ", " )
  ]
, [ ( NormalTok , "                                " )
  , ( StringTok , "\"ER\"" )
  , ( NormalTok , ", " )
  , ( StringTok , "\"FS\"" )
  , ( NormalTok , ", " )
  , ( StringTok , "\"LY\"" )
  , ( NormalTok , ", " )
  , ( StringTok , "\"PC\"" )
  , ( NormalTok , ", " )
  , ( StringTok , "\"ZM\"" )
  , ( NormalTok , "};" )
  ]
, []
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "System" )
  , ( NormalTok , "." )
  , ( FunctionTok , "out" )
  , ( NormalTok , "." )
  , ( FunctionTok , "println" )
  , ( NormalTok , "(" )
  , ( StringTok , "\"" )
  , ( SpecialCharTok , "\\\"\\\"" )
  , ( StringTok , ": \"" )
  , ( NormalTok , " + " )
  , ( FunctionTok , "canMakeWord" )
  , ( NormalTok , "(" )
  , ( StringTok , "\"\"" )
  , ( NormalTok , ", blocks));" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "System" )
  , ( NormalTok , "." )
  , ( FunctionTok , "out" )
  , ( NormalTok , "." )
  , ( FunctionTok , "println" )
  , ( NormalTok , "(" )
  , ( StringTok , "\"A: \"" )
  , ( NormalTok , " + " )
  , ( FunctionTok , "canMakeWord" )
  , ( NormalTok , "(" )
  , ( StringTok , "\"A\"" )
  , ( NormalTok , ", blocks));" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "System" )
  , ( NormalTok , "." )
  , ( FunctionTok , "out" )
  , ( NormalTok , "." )
  , ( FunctionTok , "println" )
  , ( NormalTok , "(" )
  , ( StringTok , "\"BARK: \"" )
  , ( NormalTok , " + " )
  , ( FunctionTok , "canMakeWord" )
  , ( NormalTok , "(" )
  , ( StringTok , "\"BARK\"" )
  , ( NormalTok , ", blocks));" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "System" )
  , ( NormalTok , "." )
  , ( FunctionTok , "out" )
  , ( NormalTok , "." )
  , ( FunctionTok , "println" )
  , ( NormalTok , "(" )
  , ( StringTok , "\"book: \"" )
  , ( NormalTok , " + " )
  , ( FunctionTok , "canMakeWord" )
  , ( NormalTok , "(" )
  , ( StringTok , "\"book\"" )
  , ( NormalTok , ", blocks));" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "System" )
  , ( NormalTok , "." )
  , ( FunctionTok , "out" )
  , ( NormalTok , "." )
  , ( FunctionTok , "println" )
  , ( NormalTok , "(" )
  , ( StringTok , "\"treat: \"" )
  , ( NormalTok , " + " )
  , ( FunctionTok , "canMakeWord" )
  , ( NormalTok , "(" )
  , ( StringTok , "\"treat\"" )
  , ( NormalTok , ", blocks));" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "System" )
  , ( NormalTok , "." )
  , ( FunctionTok , "out" )
  , ( NormalTok , "." )
  , ( FunctionTok , "println" )
  , ( NormalTok , "(" )
  , ( StringTok , "\"COMMON: \"" )
  , ( NormalTok , " + " )
  , ( FunctionTok , "canMakeWord" )
  , ( NormalTok , "(" )
  , ( StringTok , "\"COMMON\"" )
  , ( NormalTok , ", blocks));" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "System" )
  , ( NormalTok , "." )
  , ( FunctionTok , "out" )
  , ( NormalTok , "." )
  , ( FunctionTok , "println" )
  , ( NormalTok , "(" )
  , ( StringTok , "\"SQuAd: \"" )
  , ( NormalTok , " + " )
  , ( FunctionTok , "canMakeWord" )
  , ( NormalTok , "(" )
  , ( StringTok , "\"SQuAd\"" )
  , ( NormalTok , ", blocks));" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "System" )
  , ( NormalTok , "." )
  , ( FunctionTok , "out" )
  , ( NormalTok , "." )
  , ( FunctionTok , "println" )
  , ( NormalTok , "(" )
  , ( StringTok , "\"CONFUSE: \"" )
  , ( NormalTok , " + " )
  , ( FunctionTok , "canMakeWord" )
  , ( NormalTok , "(" )
  , ( StringTok , "\"CONFUSE\"" )
  , ( NormalTok , ", blocks));" )
  ]
, [ ( NormalTok , "                " ) ]
, [ ( NormalTok , "        }" ) ]
, [ ( NormalTok , "}" ) ]
]
